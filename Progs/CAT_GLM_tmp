#!/bin/sh
#
# PURPOSE:
#
# USAGE:
#
# INPUT:
#
# OUTPUT:
#
# FUNCTIONS:
#

########################################################
# global parameters
########################################################
version='CAT_GLM, v 1.0 2005/07/30 Christian Gaser'


########################################################
# run main
########################################################

main ()
{
  parse_args ${1+"$@"}
  glm_estimate

  exit 0
}


########################################################
# check arguments and files
########################################################

parse_args ()
{
  local optname optarg

  while [ $# -gt 0 ]
  do
	optname="`echo $1 | sed 's,=.*,,'`"
	optarg="`echo $2 | sed 's,^[^=]*=,,'`"
	case "$1" in
		--l* | -l*)
			exit_if_empty "$optname" "$optarg"
			labels=$optarg
			shift
			;;
		--c* | -c*)
			exit_if_empty "$optname" "$optarg"
			contrast=$optarg
			shift
			;;
		-h | --help | -v | --version | -V)
			help
			exit 1
			;;
		-*)
			echo "`basename $0`: ERROR: Unrecognized option \"$1\"" >&2
			;;
		*)
			ARGV_list="$ARGV_list $1"
			;;
	esac
    shift
  done

}


########################################################
# check arguments
########################################################

exit_if_empty ()
{
  local desc val

  desc="$1"
  shift
  val="$*"

  if [ -z "$val" ]
  then
	echo 'ERROR: No argument given with \"$desc\" command line argument!' >&2
	exit 1
  fi
}

########################################################
# make image matrix
########################################################

glm_estimate ()
{
  
  # count arguments
  n_arg=0
  if [ -n "$ARGV_list" ]
  then
	for i in $ARGV_list; do
		n_arg=`expr $n_arg + 1`
	done
  else
	echo "No arguments given."
	help
	exit 1
  fi

  # remove '+' and/or ':' and keep only filenames
  ARGV_list_new=`echo $ARGV_list | sed 's/+//g' | sed 's/://g'`

  # count files
  n_files=0
  for i in $ARGV_list_new; do
    n_files=`expr $n_files + 1`
  done
  
  # count labels
  n_labels=0
  if [ -n "$labels" ]
  then
	for i in $labels; do
		n_labels=`expr $n_labels + 1`
	done
  fi
  
  # calculate number of columns
  n_col=`expr $n_arg - $n_files`
  n_col=`expr $n_col + 1`
  # add labels if neccessary
  n_diff=`expr $n_col - $n_labels`
  count=`expr $n_col - $n_diff`
  while [ $count -lt $n_col ];do
    count=`expr $count + 1`
    if [ $count -gt 9 ]; then
        newlabel="$newlabel "00$count
    else
        newlabel="$newlabel "000$count
    fi
  done
  
  labels=${labels}${newlabel}
  
  CAT_GLM_Estimate $ARGV_list

  # change numbers with respective labels  
  count=0
  for i in $labels; do
    count=`expr $count + 1`
    if [ $count -gt 9 ]; then
        number=00$count
    else
        number=000$count
    fi
    if [ $count -le $n_col ]; then
        for j in T ResSD beta; do
            mv ${j}_${number} ${j}_${i}
        done
    fi
  done
  
}

########################################################
# help
########################################################

help ()
{
cat <<__EOM__

PURPOSE:

USAGE:
    
EXAMPLE:

INPUT:

OUTPUT:

USED FUNCTIONS:

This script was written by Christian Gaser (christian.gaser@uni-jena.de).
This is version ${version}.

__EOM__
}

########################################################
# call main program
########################################################

main ${1+"$@"}
