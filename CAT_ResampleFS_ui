#!/bin/sh
#
# Christian Gaser - christian.gaser@uni-jena.de
# Department of Psychiatry
# University of Jena
#
# Copyright Christian Gaser, University of Jena.
# $Id: CAT_ResampleFS_ui 85 2009-01-14 23:29:48Z gaser $
#

########################################################
# global parameters
########################################################

fwhm=0
measure=thickness
subjects_dir=$SUBJECTS_DIR
output_dir="."
reg=sphere.reg
template=fsaverage
ascii=0

########################################################
# run main
########################################################

main ()
{
	check_tools
  parse_args ${1+"$@"}
  preprocess

  exit 0
}


########################################################
# DumpCurv
########################################################
preprocess ()
{

  if [ ! -d "$output_dir" ]; then
 		echo Create directory ${output_dir}.
 		mkdir -p $output_dir
 	fi
  
  if [ -n "$ARGV_list" ]
  then
		for subject in $ARGV_list
		do

		  surfdir=${subjects_dir}/${subject}/surf
		  if [ ! -d "$surfdir" ]; then
	  		echo Directory $surfdir not found.
	  		exit 1
	  	fi

		  targetdir=${subjects_dir}/${target}/surf
		  if [ ! -d "$targetdir" ]; then
	  		echo Directory $targetdir not found.
	  		exit 1
	  	fi

    	echo calculate ${subjects_dir}/${subject} 
    	tmp_name=/tmp/$$_resample
    	for hemi in lh rh; do
        if [ ! "$fwhm" == 0 ]; then
          name=${output_dir}/${fwhm}mm.${measure}.${hemi}.resample.${subject}.txt
	    	  CAT_ResampleSphericalSurf ${surfdir}/${hemi}.white ${surfdir}/${hemi}.${reg} $tmp_name ${targetdir}/${hemi}.${reg} ${surfdir}/${hemi}.${measure} ${tmp_name}.txt
	    	  CAT_BlurSurfHK $tmp_name $name $fwhm ${tmp_name}.txt
	    	  echo resample and smooth to $name
        else
          name=${output_dir}/${measure}.${hemi}.resample.${subject}.txt
	    	  CAT_ResampleSphericalSurf ${surfdir}/${hemi}.white ${surfdir}/${hemi}.${reg} $tmp_name ${targetdir}/${hemi}.${reg} ${surfdir}/${hemi}.${measure} $name
	    	  echo resample to $name
  	  	fi
  		done
 	  	rm ${tmp_name}*
  	done
  else
		echo "No arguments given."
		echo
		usage
		echo "Use the --help option for more information."
		exit 1
  fi

}


########################################################
# check arguments and files
########################################################

parse_args ()
{
  local optname optarg

  while [ $# -gt 0 ]
  do
	optname="`echo $1 | sed 's,=.*,,'`"
	optarg="`echo $1 | sed 's,^[^=]*=,,'`"
	case "$1" in
		--f* | -f*)
			optarg=`echo $optarg | sed 's,[^0-9],,g'`
			exit_if_empty "$optname" "$optarg"
			fwhm=$optarg
			;;
		--a* | -a*)
			ascii=1
			;;
		--m* | -m*)
			exit_if_empty "$optname" "$optarg"
			measure=$optarg
			;;
		--t* | -t*)
			exit_if_empty "$optname" "$optarg"
			template=$optarg
			;;
		--o* | -o*)
			exit_if_empty "$optname" "$optarg"
			output_dir=$optarg
			;;
		--d* | -d*)
			exit_if_empty "$optname" "$optarg"
			subjects_dir=$optarg
			;;
		--r* | -r*)
			exit_if_empty "$optname" "$optarg"
			reg=$optarg
			;;
		-h | --help | -v | --version | -V)
			help
			exit 1
			;;
		-*)
			echo "`basename $0`: ERROR: Unrecognized option \"$1\"" >&2
			;;
		*)
			ARGV_list="$ARGV_list $1"
			;;
	esac
    shift
  done

}


########################################################
# check arguments
########################################################

exit_if_empty ()
{
  local desc val

  desc="$1"
  shift
  val="$*"

  if [ -z "$val" ]
  then
	echo "ERROR: No argument given with \"$desc\" command line argument!" >&2
	exit 1
  fi
}

########################################################
# check if CAT tools exist
########################################################

check_tools ()
{
	for name in CAT_ResampleSphericalSurf CAT_BlurSurfHK; do
	  found=`which ${name}`
  	if [ ! -n "$found" ];then
    	echo $name not found.
    	exit 1
  	fi
  done
}

########################################################
# usage
########################################################
usage ()
{
cat <<__EOM__
USAGE: CAT_ResampleFS_ui subject [subject2 .. subjectN] [-f=fwhm_in_mm] [-d=SUBJECTS_DIR] [-a]
                          [-o=output_directory] [-m=measure] [-r=surfreg] [-t=target_surface]                      
		
__EOM__
}

########################################################
# help
########################################################

help ()
{
cat <<__EOM__

PURPOSE:
Resample surface values to a parametric tetrahedral sphere. The resampled values can be 
optionally smoothed on the target surface using a diffusion heat kernel.

USAGE:
        CAT_ResampleFS_ui subject [subject2 .. subjectN] [-f=fwhm_in_mm] [-d=SUBJECTS_DIR] [-a]
                          [-o=output_directory] [-m=measure] [-r=surfreg] [-t=target_surface]                      
    
OPTIONS:
	subject    - a subject directory in the SUBJECTS_DIR path
	-d         - subject directory [default $subjects_dir]                
	-f         - diffusion heat kernel smoothing defined in fwhm in mm [default $fwhm]
	-t         - target surface for resampling [default $template]
	-o         - output directory (created if neccessary) [default $output_dir]                
	-m         - surface measure as input [default $measure]                 
	-r         - sperical surface for resampling [default $reg]                 
	-a         - save output as ascii (text) file
    
EXAMPLE:
    CAT_ResampleFS_ui bert -f=20 -t=fsavergae -d=~/subjects -o=~/data -m=thickness
    This will resample thickness values of subject bert in the folder ~/subjects according
    to target surface fsaverage.
    The resampled values are smoothed with 20mm and saved in ~/data.

INPUT:
    Freesurfer or MNI-OBJ surface files

OUTPUT:
    Values-files

USED FUNCTIONS:
    CAT_ResampleSurf
    CAT_BlurSurfHK

This script was written by Christian Gaser (christian.gaser@uni-jena.de).

__EOM__
}

########################################################
# call main program
########################################################

main ${1+"$@"}
