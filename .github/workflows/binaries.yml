name: Build Binaries

on:
  workflow_dispatch:

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: macos-14
            arch: arm64
            artifact: cat-surface-macos-arm64
          - os: macos-13
            arch: x64
            artifact: cat-surface-macos-x86
          - os: ubuntu-latest
            arch: x64
            artifact: cat-surface-ubuntu-x86_64
          - os: ubuntu-latest
            arch: arm64
            artifact: cat-surface-ubuntu-arm64
          - os: windows-latest
            arch: x64
            artifact: cat-surface-windows-x86
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3

      - name: Set up MSYS2
        if: matrix.os == 'windows-latest'
        uses: msys2/setup-msys2@v2
        with:
          msystem: MINGW32
          install: autoconf automake libtool autoconf-archive make pkgconf zip

      - name: Install dependencies (Ubuntu)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y autoconf automake libtool autoconf-archive build-essential pkg-config zip

      - name: Install dependencies (macOS)
        if: startsWith(matrix.os, 'macos')
        run: brew install autoconf automake libtool autoconf-archive

      - name: Configure
        if: matrix.os != 'windows-latest'
        run: |
          sh autogen.sh
          ./configure --enable-static --disable-shared
      - name: Configure (Windows)
        if: matrix.os == 'windows-latest'
        shell: msys2 {0}
        run: |
          ./autogen.sh
          ./configure --enable-static --disable-shared

      - name: Build
        if: matrix.os != 'windows-latest'
        run: make -j$(nproc 2>/dev/null || sysctl -n hw.ncpu)
      - name: Build (Windows)
        if: matrix.os == 'windows-latest'
        shell: msys2 {0}
        run: make -j$(nproc)

      - name: Package binaries
        if: matrix.os != 'windows-latest'
        run: zip -r ${{ matrix.artifact }}.zip Progs
      - name: Package binaries (Windows)
        if: matrix.os == 'windows-latest'
        shell: msys2 {0}
        run: zip -r ${{ matrix.artifact }}.zip Progs

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact }}
          path: ${{ matrix.artifact }}.zip